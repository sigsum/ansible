---
- name: Verify
  hosts: all
  vars:
    test_user: alice
    test_home: "/home/{{ test_user }}"
    test_grp1: svc1-sigsum-agent  # must match converge.yml
    test_grp2: svc2-sigsum-agent  # must match converge.yml
  tasks:
    - name: "Add test user ({{ test_user }})"
      ansible.builtin.user:
        user: "{{ test_user }}"
        home: "{{ test_home }}"
        state: present

    - name: Install ssh-keygen
      ansible.builtin.apt:
        name: openssh-client
        state: present

    - name: Read public key
      ansible.builtin.openssh_keypair:
        path: "/var/lib/{{ test_grp1 }}/.config/sigsum-agent/key"
        type: ed25519
        force: no  # don't overwrite the existing key
      register: key

    - name: Save public key
      ansible.builtin.copy:
        content: "{{ key.public_key }}"
        dest: "{{ test_home }}/key.pub"
        owner: "{{ test_user }}"
        group: "{{ test_user }}"
        mode: '0644'

    - name: Create test message
      ansible.builtin.copy:
        content: "test message"
        dest: "{{ test_home }}/msg"
        owner: "{{ test_user }}"
        group: "{{ test_user }}"
        mode: '0644'

    - name: Sign message and fail because of group permissions
      ansible.builtin.shell: |
        export SSH_AUTH_SOCK="/var/run/{{ test_grp1 }}/sigsum-agent.socket"
        ssh-keygen -Y sign -n testonly -f "{{ test_home }}/key.pub" "{{ test_home }}/msg"
      become_user: "{{ test_user }}"
      become: true
      register: sign
      ignore_errors: true

    - name: Assert that signing failed
      ansible.builtin.assert:
        that: sign.rc != 0
        fail_msg: "Signing succeeded without {{ test_user }} being part of sigsum-agent group"

    - name: "Add {{ test_user }} to the first sigsum-agent group"
      ansible.builtin.user:
        user: "{{ test_user }}"
        groups: "{{ test_grp1 }}"
        append: yes

    - name: Sign message
      ansible.builtin.shell: |
        export SSH_AUTH_SOCK="/var/run/{{ test_grp1 }}/sigsum-agent.socket"
        ssh-keygen -Y sign -n testonly -f "{{ test_home }}/key.pub" "{{ test_home }}/msg"
      become_user: "{{ test_user }}"
      become: true
      register: sign

    - name: Verify message
      ansible.builtin.shell: ssh-keygen -Y check-novalidate -n testonly -f "{{ test_home }}/key.pub" -s "{{ test_home }}/msg.sig" <"{{ test_home }}/msg"
      become_user: "{{ test_user }}"
      become: true

    - name: Try to read the private key and fail
      ansible.builtin.shell: "cat /var/lib/{{ test_grp1 }}/.config/sigsum-agent/key"
      become_user: "{{ test_user }}"
      become: true
      register: keyread
      ignore_errors: true

    - name: Assert that private key reading failed
      ansible.builtin.assert:
        that: keyread.rc != 0
        fail_msg: "Private key leaked to {{ test_user }}: {{ keyread.stdout }}"

    - name: "Add {{ test_user }} to the second sigsum-agent group"
      ansible.builtin.user:
        user: "{{ test_user }}"
        groups: "{{ test_grp2 }}"
        append: yes

    - name: Sign message
      ansible.builtin.shell: |
        export SSH_AUTH_SOCK="/var/run/{{ test_grp2 }}/sigsum-agent.socket"
        ssh-keygen -Y sign -n testonly -f "{{ test_home }}/key.pub" "{{ test_home }}/msg"
      become_user: "{{ test_user }}"
      become: true

    - name: Verify message
      ansible.builtin.shell: ssh-keygen -Y check-novalidate -n testonly -f "{{ test_home }}/key.pub" -s "{{ test_home }}/msg.sig" <"{{ test_home }}/msg"
      become_user: "{{ test_user }}"
      become: true

    - name: Clean-up so verify.yml can be run repeatedly
      ansible.builtin.shell: |
        gpasswd -d "{{ test_user }}" "{{ test_grp1 }}"
        gpasswd -d "{{ test_user }}" "{{ test_grp2 }}"
        userdel -r "{{ test_user }}"
