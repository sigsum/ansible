---

# TODO: Consider adding support for multiple instances running
# different versions of trillian and sigsum-log-go. For testing a new
# version, or for keeping an instance of an older protocol alive.

- name: Install dependencies
  apt:
    pkg:
    - golang
    - git

- name: Create Sigsum user
  user:
    name: "{{ sigsum_user }}"
    password_lock: true
    system: true

- name: Prepare Trillian source directory
  file:
    path: "{{ sigsum_trillian_srcdir }}"
    state: directory
    mode: 0755
    owner: "{{ sigsum_user }}"
    group: "{{ sigsum_user }}"

- name: Prepare git.sigsum.org/sigsum-go source directory
  file:
    path: "{{ sigsum_lib_srcdir }}"
    state: directory
    mode: 0755
    owner: "{{ sigsum_user }}"
    group: "{{ sigsum_user }}"

- name: Prepare git.sigsum.org/log-go source directory
  file:
    path: "{{ sigsum_log_srcdir }}"
    state: directory
    mode: 0755
    owner: "{{ sigsum_user }}"
    group: "{{ sigsum_user }}"

- name: Clone Trillian
  become: yes
  become_user: "{{ sigsum_user }}"
  git:
    repo: "{{ sigsum_trillian_repo }}"
    version: "{{ sigsum_trillian_version }}"
    dest: "{{ sigsum_trillian_srcdir }}"

- name: Build and install Trillian
  become: yes
  become_user: "{{ sigsum_user }}"
  command: go install ./...
  args:
    chdir: "{{ sigsum_trillian_srcdir }}"

- name: Clone git.sigsum.org/sigsum-go
  become: yes
  become_user: "{{ sigsum_user }}"
  git:
    repo: "{{ sigsum_lib_repo }}"
    version: "{{ sigsum_lib_version }}"
    dest: "{{ sigsum_lib_srcdir }}"

- name: Build and install git.sigsum.org/sigsum-go
  become: yes
  become_user: "{{ sigsum_user }}"
  command: go install ./...
  args:
    chdir: "{{ sigsum_lib_srcdir }}"

- name: Clone git.sigsum.org/log-go
  become: yes
  become_user: "{{ sigsum_user }}"
  git:
    repo: "{{ sigsum_log_repo }}"
    version: "{{ sigsum_log_version }}"
    dest: "{{ sigsum_log_srcdir }}"

- name: Build and install git.sigsum.org/log-go
  become: yes
  become_user: "{{ sigsum_user }}"
  #command: go install -ldflags="-X main.gitCommit=$(git rev-list -1 HEAD)" ./...
  command: go install ./...
  args:
    chdir: "{{ sigsum_log_srcdir }}"

- name: Check if database is initiated
  become: yes
  become_user: "{{ sigsum_user }}"
  stat:
    path: ~/.dbinit.stamp
  register: db_init_stamp

- block:
    # BUG: This will not succeed without --force, but that's a bit too
    # scary -- if the stamp file disappears, we're dropping all the
    # log data. So let's rewrite this in a more sane way.  Until then,
    # edit /usr/src/trillian/scripts/resetdb.sh to replace
    # TRILLIAN_PATH with /usr/src/trillian and run:
    #   env <env below> /usr/src/trillian/scripts/resetdb.sh
    #   touch ~{{ sigsum_user }}/.db_init.stamp
    # Need to restore that change, or just wipe the whole directory
    # afterwards: rm -rf /usr/src/trillian

  # - name: Initiate db
  #   command: "{{ sigsum_trillian_srcdir }}/scripts/resetdb.sh"
  #   environment:
  #     MYSQL_USER: "{{ sigsum_user }}"
  #     MYSQL_DATABASE: "{{ sigsum_db_name }}"
  #     MYSQL_PASSWORD: "FIXME"

  - name: Create database init stamp file
    become: yes
    become_user: "{{ sigsum_user }}"
    file:
      path: ~/.dbinit.stamp
      state: touch
    register: db_init_stamp

  when: db_init_stamp.stat.exists == false

- name: Install sigsum-log startup script
  copy:
    src: sigsum-log-start.sh
    dest: /usr/bin/sigsum-log-start.sh
    mode: 0755

- name: Install service units
  template:
    src: "{{ item }}.service.j2"
    dest: "/lib/systemd/system/{{ item }}.service"
  with_items:
    - trillian-signer
    - trillian-server
    - sigsum-log-primary@
    - sigsum-log-secondary@
  notify: reload systemd

- name: Enable trillian service units
  systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items:
    - trillian-signer
    - trillian-server

# TODO: merge these two
- name: Prepare config directories for primaries
  file:
    path: "{{ sigsum_configdir_base }}/{{ item.logname }}"
    state: directory
    mode: 0755
    owner: "{{ sigsum_user }}"
    group: "{{ sigsum_user }}"
  with_items: "{{ sigsum_primary_nodes }}"
  become_user: "{{ sigsum_user }}"
  become: true
  when: sigsum_role == "primary"

- name: Prepare config directories for secondaries
  file:
    path: "{{ sigsum_configdir_base }}/{{ item.logname }}"
    state: directory
    mode: 0755
    owner: "{{ sigsum_user }}"
    group: "{{ sigsum_user }}"
  with_items: "{{ sigsum_primary_nodes }}"
  become_user: "{{ sigsum_user }}"
  become: true
  when: sigsum_role == "secondary"

# TODO: More configuration: interval, shard, verbosity, witnesses, primary, secondary, external-endpoint, internal-endpoint
- name: Generate config for primary nodes -- external-endpoint
  copy:
    dest: "{{ sigsum_configdir_base }}/{{ item.logname }}/external-endpoint"
    content: "{{ item.external_endpoint }}"
  with_items: "{{ sigsum_primary_nodes }}"
  become_user: "{{ sigsum_user }}"
  become: true

# TODO: merge these two
- name: Enable sigsum primary service units
  systemd:
    name: "sigsum-log-primary@{{ item.logname }}"
    enabled: true
    state: started
  with_items:
    - "{{ sigsum_primary_nodes }}"
  when: sigsum_role == "primary"

- name: Enable sigsum secondary service units
  systemd:
    name: "sigsum-log-secondary@{{ item.logname }}"
    enabled: true
    state: started
  with_items:
    - "{{ sigsum_secondary_nodes }}"
  when: sigsum_role == "secondary"
