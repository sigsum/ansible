---
# We can omit create.yml and destroy.yml when using molecule's podman driver.
# For hints on the "platforms options" that this driver seems to support, see:
# https://github.com/ansible-community/molecule-plugins/blob/main/src/molecule_plugins/podman/driver.py
driver:
  name: podman

# For reference, see:
# https://hub.docker.com/r/trfore/docker-debian12-systemd
platforms:
  - name: bookworm-systemd
    image: docker.io/trfore/docker-debian12-systemd:latest
    command: /usr/sbin/init
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: false
    pre_build_image: true

# For reference, see:
# https://ansible.readthedocs.io/projects/molecule/configuration/#scenario
#
# The below is intentionally configured to facilitate use of:
# - molecule converge
# - molecule test
# - molecule destroy
#
# Think of "molecule converge" as running ansible on a host.  Multiple
# invocations of converge results in multiple runs of ansible on the host.
#
# Use "molecule login" to get a shell on the host.  This is, e.g., helpful
# for debugging and interactive testing (editing a file, converge again, etc).
#
# Use "molecule destroy" to clean up the host.  If any container is lingering
# (podman container ls --all), use "molecule destroy --all" instead.
#
# Use "molecule test" to run an automated test.  Add "--destroy never" to keep
# the container in case of failure (which permits "molecule login").
scenario:
  name: default
  converge_sequence:
    - create
    - converge
  test_sequence:
    - destroy
    - create
    - converge
    - idempotence
    # Basic tests
    - verify
    # Test configuration updates
    - side_effect tests/update-backend-do.yml
    - converge
    - verify tests/update-backend-ok.yml
    # Done
    - destroy
  destroy_sequence:
    - destroy
